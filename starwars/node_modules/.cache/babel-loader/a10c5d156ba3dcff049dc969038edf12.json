{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eu\\\\Downloads\\\\UBGitLab\\\\GITHUB\\\\reduxex\\\\starwars\\\\src\\\\components\\\\Characters\\\\Characters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport apiCall from '../apiCall/apiCall';\nimport CharInfo from './CharInfo';\nimport { size } from \"lodash\";\nimport \"../Characters/Charcaters.style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Characters(props) {\n  _s();\n\n  const backColor = \"red\";\n  const page = useSelector(state => state.page);\n  const [list, setList] = useState([]);\n  const [charToDisplay, setCharToDisplay] = useState(null);\n  useEffect(() => {\n    apiCall(page).then(info => setList(info));\n  }, [page]);\n\n  const handleClick = index => {\n    setCharToDisplay(index);\n    console.log(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"starwarsNames\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: size(list) ? list.map((elem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divGeneralText\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"nameStarWars\",\n          className: \"starwarsDivNames\",\n          onClick: () => handleClick(index),\n          style: {\n            backgroundColor: charToDisplay === index ? backColor : ''\n          },\n          value: elem.name,\n          children: elem.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), Number.isInteger(charToDisplay) && index === charToDisplay ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalDiv\",\n          children: Number.isInteger(charToDisplay) && index === charToDisplay && /*#__PURE__*/_jsxDEV(CharInfo, {\n            info: elem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)) : \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Characters, \"9ShYdfznLfkXrnj4C4mfqjcrfJ0=\", false, function () {\n  return [useSelector];\n});\n\n_c = Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"sources":["C:/Users/eu/Downloads/UBGitLab/GITHUB/reduxex/starwars/src/components/Characters/Characters.js"],"names":["React","useState","useEffect","useSelector","useDispatch","apiCall","CharInfo","size","Characters","props","backColor","page","state","list","setList","charToDisplay","setCharToDisplay","then","info","handleClick","index","console","log","map","elem","backgroundColor","name","Number","isInteger"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,IAAR,QAAmB,QAAnB;AACA,OAAO,oCAAP;;AAEA,eAAe,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAEvC,QAAMC,SAAS,GAAG,KAAlB;AAGA,QAAMC,IAAI,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,IAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACfG,IAAAA,OAAO,CAACM,IAAD,CAAP,CAAcM,IAAd,CAAoBC,IAAD,IAAUJ,OAAO,CAACI,IAAD,CAApC;AACD,GAFQ,EAEN,CAACP,IAAD,CAFM,CAAT;;AAIA,QAAMQ,WAAW,GAAIC,KAAD,IAAW;AAC3BJ,IAAAA,gBAAgB,CAACI,KAAD,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAHD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACI;AAAA,gBACKb,IAAI,CAACM,IAAD,CAAJ,GACKA,IAAI,CAACU,GAAL,CAAS,CAACC,IAAD,EAAOJ,KAAP,kBACX;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AACI,UAAA,EAAE,EAAC,cADP;AAEI,UAAA,SAAS,EAAC,kBAFd;AAGI,UAAA,OAAO,EAAE,MAAMD,WAAW,CAACC,KAAD,CAH9B;AAII,UAAA,KAAK,EAAE;AAACK,YAAAA,eAAe,EAAEV,aAAa,KAAKK,KAAlB,GAA0BV,SAA1B,GAAsC;AAAxD,WAJX;AAKI,UAAA,KAAK,EAAEc,IAAI,CAACE,IALhB;AAAA,oBAOKF,IAAI,CAACE;AAPV;AAAA;AAAA;AAAA;AAAA,gBADJ,EAUKC,MAAM,CAACC,SAAP,CAAiBb,aAAjB,KAAmCK,KAAK,KAAKL,aAA7C,gBACG;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBACKY,MAAM,CAACC,SAAP,CAAiBb,aAAjB,KAAmCK,KAAK,KAAKL,aAA7C,iBACG,QAAC,QAAD;AAAU,YAAA,IAAI,EAAES;AAAhB;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,gBADH,GAMG,IAhBR;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,CADL,GAqBC;AAtBN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GAhDuBhB,U;UAKPL,W;;;KALOK,U","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport apiCall from '../apiCall/apiCall';\r\nimport CharInfo from './CharInfo';\r\nimport {size} from \"lodash\";\r\nimport \"../Characters/Charcaters.style.css\";\r\n\r\nexport default function Characters (props) {\r\n\r\n    const backColor = \"red\";\r\n\r\n\r\n    const page = useSelector((state) => state.page);\r\n    const [list, setList] = useState([]);\r\n    const [charToDisplay, setCharToDisplay] = useState(null);\r\n\r\n    useEffect( () => {\r\n      apiCall(page).then((info) => setList(info));\r\n    }, [page]);\r\n  \r\n    const handleClick = (index) => {\r\n        setCharToDisplay(index);\r\n        console.log(index);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"starwarsNames\">\r\n            <div>\r\n                {size(list)\r\n                    ? list.map((elem, index) => \r\n                    <div className=\"divGeneralText\">\r\n                        <div\r\n                            id=\"nameStarWars\"\r\n                            className=\"starwarsDivNames\"\r\n                            onClick={() => handleClick(index)}\r\n                            style={{backgroundColor: charToDisplay === index ? backColor : ''}}\r\n                            value={elem.name}\r\n                        >\r\n                            {elem.name}\r\n                        </div>\r\n                        {Number.isInteger(charToDisplay) && index === charToDisplay ? (\r\n                            <div className=\"modalDiv\">\r\n                                {Number.isInteger(charToDisplay) && index === charToDisplay && (\r\n                                    <CharInfo info={elem} />\r\n                                )}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                )\r\n                : \"loading\"}\r\n            </div>\r\n        </div>\r\n          \r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}